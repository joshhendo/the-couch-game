{"version":3,"file":"room-repository.js","sourceRoot":"","sources":["room-repository.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,kCAAkC;AAClC,uDAAuD;AACvD,iFAAmE;AAEnE,MAAM,UAAU,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;AASpC,oBAAiC,IAAY,EAAE,UAAkB;;QAC/D,MAAM,UAAU,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,EAAE,0BAAc,EAAE,IAAI,CAAC,SAAS,CAAE;YAC1E,KAAK,EAAE,SAAS;YAChB,UAAU;YACV,UAAU,EAAE,IAAI;YAChB,gBAAgB,EAAE,IAAI;SACvB,CAAC,CAAC,CAAC;QAEJ,kCAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;CAAA;AATD,gCASC;AAED,iBAA8B,IAAY;;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,UAAU,CAAC,GAAG,CAAC,aAAa,IAAI,EAAE,CAAC,CAAC,CAAC;IAC/D,CAAC;CAAA;AAFD,0BAEC;AAED,oBAAiC,IAAY,EAAE,IAAmB;;QAChE,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAC,CAAC;QACpC,MAAM,OAAO,qBACR,OAAO,EACP,IAAI,CACR,CAAC;QACF,MAAM,UAAU,CAAC,KAAK,CAAC,aAAa,IAAI,EAAE,EAAE,0BAAc,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACrF,kCAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;CAAA;AARD,gCAQC;AAED,kBAA+B,IAAY,EAAE,KAAoB;;QAC/D,MAAM,UAAU,CAAC,IAAI,EAAE,EAAC,KAAK,EAAC,CAAC,CAAC;QAChC,kCAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;CAAA;AAHD,4BAGC","sourcesContent":["import * as redis from '../redis';\r\nimport {DAY_IN_SECONDS} from \"../../helpers/constants\";\r\nimport {roomChanged} from \"../../controllers/websocket-controller\";\r\n\r\nconst connection = redis.getRedis();\r\n\r\nexport interface Room {\r\n  state: 'pending' | 'started' | 'finished';\r\n  couch_size: number;\r\n  empty_spot?: number;\r\n  last_selected_id?: number;\r\n}\r\n\r\nexport async function createRoom(code: string, couch_size: number) {\r\n  await connection.setex(`ROOM_CODE_${code}`, DAY_IN_SECONDS, JSON.stringify( {\r\n    state: 'pending',\r\n    couch_size,\r\n    empty_spot: null,\r\n    last_selected_id: null,\r\n  }));\r\n\r\n  roomChanged(code);\r\n}\r\n\r\nexport async function getRoom(code: string): Promise<Room> {\r\n  return JSON.parse(await connection.get(`ROOM_CODE_${code}`));\r\n}\r\n\r\nexport async function updateRoom(code: string, data: Partial<Room>) {\r\n  const current = await getRoom(code);\r\n  const updated = {\r\n    ...current,\r\n    ...data\r\n  };\r\n  await connection.setex(`ROOM_CODE_${code}`, DAY_IN_SECONDS, JSON.stringify(updated));\r\n  roomChanged(code);\r\n}\r\n\r\nexport async function setState(code: string, state: Room['state']) {\r\n  await updateRoom(code, {state});\r\n  roomChanged(code);\r\n}\r\n\r\n\r\n"]}