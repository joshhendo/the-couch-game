{"version":3,"file":"room-controller.js","sourceRoot":"","sources":["room-controller.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,iEAEsC;AAEtC,+BAA+B;AAC/B,6BAA6B;AAE7B,wBAAqC,GAAG;;QACtC,MAAM,QAAQ,GAAG,MAAM,2BAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEvD,OAAO;YACL,IAAI,EAAE,GAAG;YACT,IAAI,EAAE;gBACJ,SAAS,EAAE,QAAQ;aACpB;SACF,CAAA;IACH,CAAC;CAAA;AATD,wCASC;AAED,iBAA8B,GAAG,EAAE,GAAG;;QACpC,iBAAkB,GAAG,EAAE,GAAG;YACxB,OAAO,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE;gBACxB,MAAM,EAAE,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;aAC9B,CAAC,CAAA;QACJ,CAAC;QAED,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QACtC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,MAAM,SAAS,GAAG,MAAM,6BAAY,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAEvD,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;YACrB,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,OAAO;YACL,IAAI,EAAE,SAAS;SAChB,CAAA;IACH,CAAC;CAAA;AA1BD,0BA0BC;AAED,uBAAoC,GAAG;;QACrC,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QAEtC,IAAI,CAAC,QAAQ,EAAE;YACb,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,MAAM,SAAS,GAAG,MAAM,6BAAY,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,EAAE;YACd,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC;SACtB;QAED,IAAI,SAAS,CAAC,KAAK,KAAK,SAAS,IAAI,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE;YACjE,MAAM,0BAAS,CAAC,QAAQ,CAAC,CAAC;SAC3B;QAED,OAAO;YACL,IAAI,EAAE,GAAG;SACV,CAAA;IACH,CAAC;CAAA;AAnBD,sCAmBC;AAED,4BAAyC,GAAG;;QAC1C,MAAM,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC;QACtC,MAAM,eAAe,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACtC,MAAM,WAAW,GAAG,MAAM,+BAAc,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAEpE,OAAO;YACL,IAAI,EAAE,GAAG;YACT,IAAI,EAAE,WAAW;SAClB,CAAC;IACJ,CAAC;CAAA;AATD,gDASC","sourcesContent":["import {\r\n  createRoom, getRoomState, addParticipant, startRoom\r\n} from \"../processors/room-processor\";\r\n\r\nimport * as fresh from 'fresh';\r\nimport * as etag from 'etag';\r\n\r\nexport async function postCreateRoom(req) {\r\n  const roomCode = await createRoom(req.body.couch_size);\r\n\r\n  return {\r\n    code: 201,\r\n    body: {\r\n      room_code: roomCode,\r\n    }\r\n  }\r\n}\r\n\r\nexport async function getRoom(req, res) {\r\n  function isFresh (req, res) {\r\n    return fresh(req.headers, {\r\n      'etag': res.getHeader('ETag'),\r\n    })\r\n  }\r\n\r\n  const roomCode = req.params.room_code;\r\n  if (!roomCode) {\r\n    return { code: 400 };\r\n  }\r\n\r\n  const roomState = await getRoomState(roomCode);\r\n  if (!roomState) {\r\n    return { code: 404 };\r\n  }\r\n\r\n  res.setHeader('ETag', etag(JSON.stringify(roomState)));\r\n\r\n  if (isFresh(req, res)) {\r\n    return { code: 304 };\r\n  }\r\n\r\n  return {\r\n    body: roomState\r\n  }\r\n}\r\n\r\nexport async function putUpdateRoom(req) {\r\n  const roomCode = req.params.room_code;\r\n\r\n  if (!roomCode) {\r\n    return { code: 400 };\r\n  }\r\n\r\n  const roomState = await getRoomState(roomCode);\r\n  if (!roomState) {\r\n    return { code: 404 };\r\n  }\r\n\r\n  if (roomState.state === 'pending' && req.body.state === 'started') {\r\n    await startRoom(roomCode);\r\n  }\r\n\r\n  return {\r\n    code: 200\r\n  }\r\n}\r\n\r\nexport async function postAddParticipant(req) {\r\n  const roomCode = req.params.room_code;\r\n  const participantName = req.body.name;\r\n  const participant = await addParticipant(roomCode, participantName);\r\n\r\n  return {\r\n    code: 201,\r\n    body: participant,\r\n  };\r\n}\r\n"]}